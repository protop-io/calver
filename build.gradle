plugins {
    id 'java-library'
    id "maven-publish"
    id "signing"
}

group = "io.protop.version"
version = "2020.3.1.1"

ext {
    junitJupiterVersion = "5.5.2"
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

test {
    useJUnitPlatform()
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

// publish with -Dorg.gradle.internal.publish.checksums.insecure
// because: https://github.com/gradle/gradle/issues/11308
// and: https://issues.sonatype.org/browse/OSSRH-53267
// https://docs.gradle.org/6.0.1/release-notes.html
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "version"
            from components.java

            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }

            pom {
                name = "Version"
                description = "A library for parsing and manipulating Versions."
                url = "https://github.com/protop-io/version"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "jefferyshivers"
                        name = "Jeffery Shivers"
                        email = "jeffery@protop.io"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/protop-io/version.git"
                    developerConnection = 'scm:git:ssh://github.com/protop-io/version.git'
                    url = "https://github.com/protop-io/version"
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

// https://docs.gradle.org/current/userguide/signing_plugin.html#signing_plugin
signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption("html5", true)
    }
}
